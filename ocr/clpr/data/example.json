{
    "image_name": "example.jpg", // 文件名，防手抖(这一项名字对应最原始数据的名字)
    "version": "v0.0.0.0.0", // vyolo车辆检测版本(0:yolo, 1: segnet).特殊车牌分类版本.车牌定位版本.车牌分类版本.车牌识别版本
    "objects": [
        {
            "car_det": { // 车辆检测的结果
                "car_obj": { // yolo车牌检测结果
                    "rect": [0, 0, 1024, 1024], // 相对于原图的位置
                    "score": 0.99   // yolo检测的得分
                },
                "car_cls": { // 特殊车辆分类结果（22类）
                    "classification": "jingche", // 分类结果，可以自定义然后附带类别名称映射表
                    "score": 0.99   // 特殊车辆分类得分
                }
            },
            "clpr": { // 车牌信息，如果有车辆没有车牌则没有这一项
                "plate_obj": { // 车牌定位结果
                    "rect": [0, 0, 512, 512], // 目前是rect，以后是四边形后，标签名转为"point":[x1, y1, x2, y2, x3, y3, x4, y4]
                    "score": 0.99   // 车牌定位得分(如果是人工标注的结果，则得分为1)
                },
                "plate_cls": { // 车牌分类结果（5类）
                    "classification": "blue", // 车牌分类结果，可以自定义然后附带类别名称映射表
                    "score": 0.99 // 车牌分类得分
                },
                "plate_rec": { // 车牌识别结果
                    "plate_num": "沪A12345", // 车牌识别结果
                    // 这个是ctc的每一个slice的得分
                    "score": [0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9],
                    "plate_num_gt": "沪A12345" // 如果有人工标注则有这一项                    
                },
                "spray_plate_obj":{ // 如果有喷漆车牌，定位结果
                    "point":[1, 2, 3, 4, 5, 6, 7, 8],
                    "score": 1
                }
            }
        }
    ]
    
}